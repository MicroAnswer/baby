{"version":3,"sources":["Baby.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","deepClone","obj","clonedObj","Array","isArray","key","Object","prototype","hasOwnProperty","h","tag","attr","children","let","ele","Component","this","components","componentInstace","props","bind","propData","parent","$children","push","$mount","document","createElement","style","on","eventName","addEventListener","event","toString","_this","detail","listener","class","className","ref","$refs","type","ct","child","createTextNode","String","appendChild","Dep","watchs","_setreactive","keys","forEach","arr","callThisArg","value","k","defineProperty","get","dep","depect","set","v","oldV","notify","_watch","expOrFun","callback","target","_proxy","objField","readOnly","Baby","option","_init","nv","ov","fn","o2","o2Key","o1","$options","name","$el","undefined","$parent","$props","applyProp","mergOption","$data","data","watch","watchKey","_watchFun","methods","m","writable","extend","__r","mounted","__mounted","created","$createElement","cb","el","dom","querySelector","tagName","html","body","toLowerCase","replaceWith","$emit","arg","CustomEvent","dispatchEvent","componentOption","BabyComponent","constructor","window"],"mappings":"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","file":"Baby.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\r\nfunction deepClone(obj) {\r\n    if (obj === null || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    const clonedObj = Array.isArray(obj) ? [] : {};\r\n\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            clonedObj[key] = deepClone(obj[key]);\r\n        }\r\n    }\r\n\r\n    return clonedObj;\r\n}\r\nfunction mergOption(o1, o2) {\r\n    for (const o2Key in o2) {\r\n        o1[o2Key] = o2[o2Key];\r\n    }\r\n    return o1;\r\n}\r\n\r\n\r\n/**\r\n * dom 构建函数。\r\n * <br>\r\n * 例如：\r\n * <br>\r\n * <pre>\r\n * var divDom = h(\"div\", {\r\n *     on: {click: onClick},\r\n *     style: {color: \"red\", \"background-color\": \"blue\"},\r\n *     id: \"dom_1\",\r\n * });\r\n * document.body.append(divDom);\r\n * </pre>\r\n *\r\n *\r\n * @param tag {string} 希望构建的dom的节点\r\n * @param attr {object?} 节点上的属性配置\r\n * @param children {any?} 在该节点内的子节点，也可以是本函数返回值。\r\n * @returns {HTMLElement}\r\n */\r\nfunction h(tag, attr, children) {\r\n    let ele;\r\n    // 处理子组件。\r\n    let Component = this.components[tag];\r\n    let componentInstace;\r\n    if (Component) {\r\n        let props = attr.props || {};\r\n        if (typeof props === \"function\") {\r\n            props = props.bind(this);\r\n        }\r\n        componentInstace = new Component({propData: props, parent: this});\r\n        this.$children = this.$children || [];\r\n        this.$children.push(componentInstace);\r\n        ele = componentInstace.$mount();\r\n    } else {\r\n        // 处理html组件。\r\n        ele = document.createElement(tag);\r\n    }\r\n    if (attr) {\r\n        if (attr.style) {\r\n            for (const key in attr.style) {\r\n                ele.style[key] = attr.style[key];\r\n            }\r\n            delete attr.style;\r\n        }\r\n\r\n        if (attr.on) {\r\n            let _this = this;\r\n            for (const eventName in attr.on){\r\n                let listener = attr.on[eventName];\r\n                ele.addEventListener(eventName, function (event) {\r\n                    if (Object.prototype.toString.call(event) === \"[object CustomEvent]\") {\r\n                        listener.call(_this, event.detail);\r\n                    } else {\r\n                        listener.call(_this);\r\n                    }\r\n                });\r\n            }\r\n            delete attr.on;\r\n        }\r\n\r\n        if (attr.class) {\r\n            attr.className = attr.class;\r\n            delete attr.class;\r\n        }\r\n\r\n        if (attr.ref) {\r\n            this.$refs = this.$refs || {};\r\n            this.$refs[attr.ref] = componentInstace || ele;\r\n        }\r\n\r\n        for (const key in attr) {\r\n\r\n            // 处理组件类型时的参数。\r\n            if (componentInstace && componentInstace.$props.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            ele[key] = attr[key];\r\n        }\r\n    }\r\n    let type = Object.prototype.toString.call(children);\r\n    if (type !== '[object Array]' && type !== '[object Undefined]') {\r\n        children = [children];\r\n    }\r\n\r\n    if (children) {\r\n        for (let i = 0; i < children.length; i++) {\r\n            let child = children[i];\r\n            let ct = typeof child;\r\n            if (ct === \"function\") {\r\n                child = child();\r\n                ct = typeof child;\r\n            }\r\n\r\n            if (ct === \"number\" || ct === \"string\") {\r\n                child = document.createTextNode(String(child));\r\n            }\r\n\r\n            ele.appendChild(child);\r\n        }\r\n    }\r\n\r\n    return ele;\r\n}\r\n\r\nfunction Dep () {\r\n    this.watchs = [];\r\n}\r\nDep.target = null;\r\nDep.prototype.depect = function () {\r\n    if (Dep.target && this.watchs.indexOf(Dep.target) === -1) {\r\n        this.watchs.push(Dep.target);\r\n        Dep.target = null;\r\n    }\r\n}\r\nDep.prototype.notify = function (callThisArg, nv, ov) {\r\n    let arr = this.watchs;\r\n    if (arr && arr.length > 0) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].call(callThisArg, nv, ov);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 将指定对象设置为支持响应式。\r\n * @param obj {object}\r\n * @private\r\n */\r\nfunction _setreactive(obj) {\r\n    let _this = this;\r\n    Object.keys(obj).forEach(k => {\r\n        let dep = new Dep();\r\n        let value = obj[k];\r\n        Object.defineProperty(obj, k, {\r\n            get() {\r\n                dep.depect();\r\n                return value;\r\n            },\r\n            set(v) {\r\n                let oldV = value;\r\n                if (oldV === v) {\r\n                    return;\r\n                }\r\n                value = v;\r\n                dep.notify(_this, v, oldV);\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction _watch (expOrFun, callback) {\r\n    Dep.target = callback;\r\n    if (typeof expOrFun === \"string\") {\r\n        (function () {\r\n            return this[expOrFun];\r\n        }).call(this);\r\n    } else {\r\n        expOrFun.call(this);\r\n    }\r\n    Dep.target = null;\r\n}\r\n\r\n/**\r\n * 代理指定对象。\r\n * @param objField {string}\r\n * @param readOnly {boolean}\r\n * @private\r\n */\r\nfunction _proxy(objField, readOnly) {\r\n    let _this = this;\r\n    Object.keys(this[objField]).forEach(k => {\r\n        Object.defineProperty(_this, k, {\r\n            get() {\r\n                return _this[objField][k];\r\n            },\r\n            set(v) {\r\n                if (readOnly) {return}\r\n                _this[objField][k] = v;\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * 组件构造函数。\r\n * @param option {{\r\n *     propData: object?,\r\n *     components: object?,\r\n *     render: function(function(string, object?, any[]?)),\r\n *     created: function?,\r\n *     mounted: function?,\r\n *     methods: object?,\r\n *     watch: object?,\r\n *     data: object?\r\n * }}\r\n * @constructor\r\n */\r\nfunction Baby(option) {\r\n\r\n    // this.__className = \"BabyComponent\";\r\n\r\n    this._init(option);\r\n}\r\n\r\nBaby.prototype._init = function (option) {\r\n    let _this = this;\r\n\r\n    option = mergOption(option, this.$options || {});\r\n\r\n    this.name = option.name;\r\n    this.$el = undefined;\r\n\r\n    this.$parent = option.parent;\r\n\r\n    // 接入所有声明的参数。\r\n    this.$props = {};\r\n    let applyProp = (props) => {\r\n        Object.keys(props).forEach(key => {\r\n            this.$props[key] = props[key];\r\n        });\r\n    };\r\n    if (typeof option.propData === \"function\") {\r\n        let fn = () => {\r\n            let props = option.propData.call();\r\n            applyProp(props);\r\n        }\r\n        _watch.call(this, fn, fn);\r\n    } else {\r\n        applyProp(option.propData||{});\r\n    }\r\n    _setreactive.call(this, this.$props);\r\n    _proxy.call(this, \"$props\", true);\r\n\r\n    // 接入所有声明的变量。\r\n    this.$data = deepClone(option.data || {});\r\n    _setreactive.call(this, this.$data);\r\n    _proxy.call(this, \"$data\", false);\r\n\r\n    // 接入所有watch\r\n    let watch = option.watch || {};\r\n    this._watchFun = {};\r\n    for (const watchKey in watch) {\r\n        this._watchFun[watchKey] = watch[watchKey];\r\n        _watch.call(this, watchKey, function (nv, ov) {\r\n            this._watchFun[watchKey].call(this,nv, ov);\r\n        });\r\n    }\r\n\r\n\r\n    // 接入所有声明的函数。\r\n    let methods = option.methods || {};\r\n    for (let m in methods) {\r\n        Object.defineProperty(this, m, {\r\n            value: methods[m].bind(this),\r\n            writable: false\r\n        });\r\n    }\r\n\r\n    // 接入所有要使用的子组件\r\n    let components = option.components || {};\r\n    this.components = {};\r\n    this.$children = [];\r\n    for (let c in components) {\r\n        this.components[c] = Baby.extend(components[c]);\r\n    }\r\n\r\n    // 接入渲染函数\r\n    this.__r/*render*/ = (option.render || function () {\r\n        throw new Error(\"必须提供 render 函数来渲染本组件。\");\r\n    }).bind(this);\r\n\r\n    // 接入 mounted 函数\r\n    if (\"function\" === typeof option.mounted) {\r\n        this.__mounted = option.mounted.bind(this);\r\n    }\r\n\r\n    // 执行 created 回调。\r\n    if (\"function\" === typeof option.created) {\r\n        option.created.bind(this).call();\r\n    }\r\n}\r\n\r\n/**\r\n * 此函数让你再业务逻辑执行过程中可以创建一个dom。\r\n * @param tag {string} 希望构建的dom的节点\r\n * @param attr {object?} 节点上的属性配置\r\n * @param children {any?} 在该节点内的子节点，也可以是本函数返回值。\r\n * @returns {HTMLElement}\r\n */\r\nBaby.prototype.$createElement = function(cb) {\r\n    return cb.call(this, h.bind(this));\r\n}\r\n\r\n/**\r\n * 挂载函数，执行此函数后，本组将将会替换 el 指定的位置。\r\n * @param el {string|HTMLElement?} 可以是 css 选择器，也可以是一个 HTMLElement 实例。\r\n */\r\nBaby.prototype.$mount = function (el) {\r\n    if (\"string\" === typeof el) {\r\n        el = document.querySelector(el);\r\n    }\r\n\r\n    if (\"undefined\" !== typeof el) {\r\n\r\n        if (!el.tagName || {html: true, body: true}[el.tagName.toLowerCase()]) {\r\n            throw new Error(\"该挂载节点错误，请指定一个存在的非html、body节点。\");\r\n        }\r\n    }\r\n\r\n    // 渲染\r\n    let dom = this.__r(h.bind(this));\r\n\r\n    // 传入了目标替换实列。\r\n    if (el) {\r\n        el.replaceWith(dom);\r\n    }\r\n\r\n    this.$el = el = dom;\r\n\r\n    // 执行 mounted 回调。\r\n    if (\"function\" === typeof this.__mounted) {\r\n        this.__mounted();\r\n    }\r\n\r\n    return el;\r\n};\r\n\r\n/**\r\n * 发出事件。\r\n * @param eventName {string} 事件名\r\n * @param arg {any} 事件参数\r\n */\r\nBaby.prototype.$emit = function (eventName, arg) {\r\n    let event = new CustomEvent(eventName, {\r\n        detail: arg\r\n    });\r\n    this.$el.dispatchEvent(event);\r\n}\r\n\r\n\r\n/**\r\n * 本函数用于创建组件构造函数。\r\n * @param componentOption {{\r\n *     name: string?,\r\n *     props: object?,\r\n *     components: object?,\r\n *     render: function(function(string, object?, any[]?)),\r\n *     created: function?,\r\n *     mounted: function?,\r\n *     methods: object?,\r\n *     watch: object?,\r\n *     data: object?\r\n * }}\r\n */\r\nBaby.extend = function (componentOption) {\r\n\r\n    const BabyComponent = function BabyComponent(option) {\r\n        this._init(option);\r\n    }\r\n\r\n    BabyComponent.prototype = Object.create(this.prototype);\r\n    BabyComponent.prototype.constructor = BabyComponent;\r\n    BabyComponent.prototype.$options = deepClone(componentOption);\r\n\r\n    return BabyComponent;\r\n}\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Baby = Baby;\r\n}\r\nmodule.exports = Baby;\n},{}]},{},[1]);\n"]}