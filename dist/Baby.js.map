{"version":3,"sources":["Baby.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","deepClone","obj","clonedObj","Array","isArray","key","Object","prototype","hasOwnProperty","h","tag","attr","children","let","ele","Component","this","components","componentInstace","props","bind","propData","parent","$children","push","$mount","document","createElement","style","startsWith","setProperty","on","listener","eventName","addEventListener","event","toString","detail","_this","className","class","ref","$refs","$props","type","child","ct","createTextNode","String","appendChild","Dep","watchs","_setreactive","arr","forEach","callThisArg","dep","value","k","defineProperty","get","depect","set","v","oldV","_watch","expOrFun","callback","target","_proxy","objField","readOnly","keys","Baby","option","_init","nv","ov","fn","o2","o2Key","o1","$options","name","$el","$parent","applyProp","mergOption","data","$data","watch","_watchFun","watchKey","methods","m","writable","cp","extend","__r","mounted","__mounted","created","$createElement","cb","el","dom","querySelector","html","body","tagName","toLowerCase","replaceWith","$emit","arg","CustomEvent","setTimeout","dispatchEvent","componentOption","BabyComponent","constructor","window"],"mappings":"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","file":"Baby.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\r\nfunction deepClone(obj) {\r\n    if (obj === null || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    const clonedObj = Array.isArray(obj) ? [] : {};\r\n\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            clonedObj[key] = deepClone(obj[key]);\r\n        }\r\n    }\r\n\r\n    return clonedObj;\r\n}\r\nfunction mergOption(o1, o2) {\r\n    for (const o2Key in o2) {\r\n        o1[o2Key] = o2[o2Key];\r\n    }\r\n    return o1;\r\n}\r\n\r\n\r\n/**\r\n * dom 构建函数。\r\n * <br>\r\n * 例如：\r\n * <br>\r\n * <pre>\r\n * var divDom = h(\"div\", {\r\n *     on: {click: onClick},\r\n *     style: {color: \"red\", \"background-color\": \"blue\"},\r\n *     id: \"dom_1\",\r\n * });\r\n * document.body.append(divDom);\r\n * </pre>\r\n *\r\n *\r\n * @param tag {string} 希望构建的dom的节点\r\n * @param attr {object?} 节点上的属性配置\r\n * @param children {any?} 在该节点内的子节点，也可以是本函数返回值。\r\n * @returns {HTMLElement}\r\n */\r\nfunction h(tag, attr, children) {\r\n    let ele;\r\n    // 处理子组件。\r\n    let Component = this.components[tag];\r\n    let componentInstace;\r\n    if (Component) {\r\n        let props = attr.props || {};\r\n        if (typeof props === \"function\") {\r\n            props = props.bind(this);\r\n        }\r\n        componentInstace = new Component({propData: props, parent: this});\r\n        this.$children = this.$children || [];\r\n        this.$children.push(componentInstace);\r\n        ele = componentInstace.$mount();\r\n    } else {\r\n        // 处理html组件。\r\n        ele = document.createElement(tag);\r\n    }\r\n    if (attr) {\r\n        if (attr.style) {\r\n            for (const key in attr.style) {\r\n                if (key.startsWith(\"--\")) {\r\n                    ele.style.setProperty(key, attr.style[key]);\r\n                } else {\r\n                    ele.style[key] = attr.style[key];\r\n                }\r\n            }\r\n            delete attr.style;\r\n        }\r\n\r\n        if (attr.on) {\r\n            let _this = this;\r\n            for (const eventName in attr.on){\r\n                let listener = attr.on[eventName];\r\n                ele.addEventListener(eventName, function (event) {\r\n                    if (Object.prototype.toString.call(event) === \"[object CustomEvent]\") {\r\n                        listener.call(_this, event.detail);\r\n                    } else {\r\n                        listener.call(_this);\r\n                    }\r\n                });\r\n            }\r\n            delete attr.on;\r\n        }\r\n\r\n        if (attr.class) {\r\n            attr.className = attr.class;\r\n            delete attr.class;\r\n        }\r\n\r\n        if (attr.ref) {\r\n            this.$refs = this.$refs || {};\r\n\r\n            if (this.$refs[attr.ref]) {\r\n                if (!Array.isArray(this.$refs[attr.ref])) {\r\n                    this.$refs[attr.ref] = [this.$refs[attr.ref]]\r\n                }\r\n                this.$refs[attr.ref].push(componentInstace || ele);\r\n            } else {\r\n                this.$refs[attr.ref] = componentInstace || ele;\r\n            }\r\n        }\r\n\r\n        for (const key in attr) {\r\n\r\n            // 处理组件类型时的参数。\r\n            if (componentInstace && componentInstace.$props.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            ele[key] = attr[key];\r\n        }\r\n    }\r\n    let type = Object.prototype.toString.call(children);\r\n    if (type !== '[object Array]' && type !== '[object Undefined]') {\r\n        children = [children];\r\n    }\r\n\r\n    if (children) {\r\n        for (let i = 0; i < children.length; i++) {\r\n            let child = children[i];\r\n            let ct = typeof child;\r\n            if (ct === \"function\") {\r\n                child = child();\r\n                ct = typeof child;\r\n            }\r\n\r\n            if (ct === \"number\" || ct === \"string\") {\r\n                child = document.createTextNode(String(child));\r\n            }\r\n\r\n            ele.appendChild(child);\r\n        }\r\n    }\r\n\r\n    return ele;\r\n}\r\n\r\nfunction Dep () {\r\n    this.watchs = [];\r\n}\r\nDep.target = null;\r\nDep.prototype.depect = function () {\r\n    if (Dep.target && this.watchs.indexOf(Dep.target) === -1) {\r\n        this.watchs.push(Dep.target);\r\n        Dep.target = null;\r\n    }\r\n}\r\nDep.prototype.notify = function (callThisArg, nv, ov) {\r\n    let arr = this.watchs;\r\n    if (arr && arr.length > 0) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].call(callThisArg, nv, ov);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 将指定对象设置为支持响应式。\r\n * @param obj {object}\r\n * @private\r\n */\r\nfunction _setreactive(obj) {\r\n    let _this = this;\r\n    Object.keys(obj).forEach(k => {\r\n        let dep = new Dep();\r\n        let value = obj[k];\r\n        Object.defineProperty(obj, k, {\r\n            get() {\r\n                dep.depect();\r\n                return value;\r\n            },\r\n            set(v) {\r\n                let oldV = value;\r\n                if (oldV === v) {\r\n                    return;\r\n                }\r\n                value = v;\r\n                dep.notify(_this, v, oldV);\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction _watch (expOrFun, callback) {\r\n    Dep.target = callback;\r\n    if (typeof expOrFun === \"string\") {\r\n        (function () {\r\n            return this[expOrFun];\r\n        }).call(this);\r\n    } else {\r\n        expOrFun.call(this);\r\n    }\r\n    Dep.target = null;\r\n}\r\n\r\n/**\r\n * 代理指定对象。\r\n * @param objField {string}\r\n * @param readOnly {boolean}\r\n * @private\r\n */\r\nfunction _proxy(objField, readOnly) {\r\n    let _this = this;\r\n    Object.keys(this[objField]).forEach(k => {\r\n        Object.defineProperty(_this, k, {\r\n            get() {\r\n                return _this[objField][k];\r\n            },\r\n            set(v) {\r\n                if (readOnly) {return}\r\n                _this[objField][k] = v;\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * 组件构造函数。\r\n * @param option {{\r\n *     propData: object?,\r\n *     components: object?,\r\n *     render: function(function(string, object?, any[]?)),\r\n *     created: function?,\r\n *     mounted: function?,\r\n *     methods: object?,\r\n *     watch: object?,\r\n *     data: object?\r\n * }}\r\n * @constructor\r\n */\r\nfunction Baby(option) {\r\n\r\n    // this.__className = \"BabyComponent\";\r\n\r\n    this._init(option);\r\n}\r\n\r\nBaby.prototype._init = function (option) {\r\n    let _this = this;\r\n\r\n    option = mergOption(option, this.$options || {});\r\n\r\n    this.name = option.name;\r\n    this.$el = undefined;\r\n\r\n    this.$parent = option.parent;\r\n\r\n    // 接入所有声明的参数。\r\n    this.$props = {};\r\n    let applyProp = (props) => {\r\n        Object.keys(props).forEach(key => {\r\n            this.$props[key] = props[key];\r\n        });\r\n    };\r\n    if (typeof option.propData === \"function\") {\r\n        let fn = () => {\r\n            let props = option.propData.call();\r\n            applyProp(props);\r\n        }\r\n        _watch.call(this, fn, fn);\r\n    } else {\r\n        applyProp(option.propData||{});\r\n    }\r\n    _setreactive.call(this, this.$props);\r\n    _proxy.call(this, \"$props\", true);\r\n\r\n    // 接入所有声明的变量。\r\n    this.$data = deepClone(option.data || {});\r\n    _setreactive.call(this, this.$data);\r\n    _proxy.call(this, \"$data\", false);\r\n\r\n    // 接入所有watch\r\n    let watch = option.watch || {};\r\n    this._watchFun = {};\r\n    for (const watchKey in watch) {\r\n        this._watchFun[watchKey] = watch[watchKey];\r\n        _watch.call(this, watchKey, function (nv, ov) {\r\n            this._watchFun[watchKey].call(this,nv, ov);\r\n        });\r\n    }\r\n\r\n\r\n    // 接入所有声明的函数。\r\n    let methods = option.methods || {};\r\n    for (let m in methods) {\r\n        Object.defineProperty(this, m, {\r\n            value: methods[m].bind(this),\r\n            writable: false\r\n        });\r\n    }\r\n\r\n    // 接入所有要使用的子组件\r\n    let components = option.components || {};\r\n    this.components = {};\r\n    this.$children = [];\r\n    for (let c in components) {\r\n        let cp = components[c];\r\n        if (typeof cp === \"function\") {\r\n            this.components[c] = Baby.extend(cp());\r\n        } else {\r\n            this.components[c] = Baby.extend(cp);\r\n        }\r\n    }\r\n\r\n    // 接入渲染函数\r\n    this.__r/*render*/ = (option.render || function () {\r\n        throw new Error(\"必须提供 render 函数来渲染本组件。\");\r\n    }).bind(this);\r\n\r\n    // 接入 mounted 函数\r\n    if (\"function\" === typeof option.mounted) {\r\n        this.__mounted = option.mounted.bind(this);\r\n    }\r\n\r\n    // 执行 created 回调。\r\n    if (\"function\" === typeof option.created) {\r\n        option.created.bind(this).call();\r\n    }\r\n}\r\n\r\n/**\r\n * 此函数让你再业务逻辑执行过程中可以创建一个dom。\r\n * @param tag {string} 希望构建的dom的节点\r\n * @param attr {object?} 节点上的属性配置\r\n * @param children {any?} 在该节点内的子节点，也可以是本函数返回值。\r\n * @returns {HTMLElement}\r\n */\r\nBaby.prototype.$createElement = function(cb) {\r\n    return cb.call(this, h.bind(this));\r\n}\r\n\r\n/**\r\n * 挂载函数，执行此函数后，本组将将会替换 el 指定的位置。\r\n * @param el {string|HTMLElement?} 可以是 css 选择器，也可以是一个 HTMLElement 实例。\r\n */\r\nBaby.prototype.$mount = function (el) {\r\n    if (\"string\" === typeof el) {\r\n        el = document.querySelector(el);\r\n    }\r\n\r\n    if (\"undefined\" !== typeof el) {\r\n\r\n        if (!el.tagName || {html: true, body: true}[el.tagName.toLowerCase()]) {\r\n            throw new Error(\"该挂载节点错误，请指定一个存在的非html、body节点。\");\r\n        }\r\n    }\r\n\r\n    // 渲染\r\n    let dom = this.__r(h.bind(this));\r\n\r\n    // 传入了目标替换实列。\r\n    if (el) {\r\n        el.replaceWith(dom);\r\n    }\r\n\r\n    this.$el = el = dom;\r\n\r\n    // 执行 mounted 回调。\r\n    if (\"function\" === typeof this.__mounted) {\r\n        this.__mounted();\r\n    }\r\n\r\n    return el;\r\n};\r\n\r\n/**\r\n * 发出事件。\r\n * @param eventName {string} 事件名\r\n * @param arg {any} 事件参数\r\n */\r\nBaby.prototype.$emit = function (eventName, arg) {\r\n    let _this = this;\r\n    let event = new CustomEvent(eventName, {\r\n        detail: arg\r\n    });\r\n    setTimeout(function () {\r\n        _this.$el.dispatchEvent(event);\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * 本函数用于创建组件构造函数。\r\n * @param componentOption {{\r\n *     name: string?,\r\n *     props: object?,\r\n *     components: object?,\r\n *     render: function(function(string, object?, any[]?)),\r\n *     created: function?,\r\n *     mounted: function?,\r\n *     methods: object?,\r\n *     watch: object?,\r\n *     data: object?\r\n * }}\r\n */\r\nBaby.extend = function (componentOption) {\r\n\r\n    const BabyComponent = function BabyComponent(option) {\r\n        this._init(option);\r\n    }\r\n\r\n    BabyComponent.prototype = Object.create(this.prototype);\r\n    BabyComponent.prototype.constructor = BabyComponent;\r\n    BabyComponent.prototype.$options = deepClone(componentOption);\r\n\r\n    return BabyComponent;\r\n}\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Baby = Baby;\r\n}\r\nmodule.exports = Baby;\r\n\n},{}]},{},[1]);\n"]}